apiVersion: v1
kind: ConfigMap
metadata:
  name: v2ray-config
data:
  config.json: |
    {
      "dns": {}, # DNS 配置，当前为空
      "stats": {}, # 统计功能配置，当前为空
      "policy": {
        "levels": {
          "0": { # 用户等级为 0 的策略配置
            "handshake": 10, # 连接建立时的握手时间限制（秒）
            "connIdle": 914, # 连接空闲的时间限制（秒）
            "uplinkOnly": 5, # 当连接下行线路关闭后的时间限制（秒）
            "downlinkOnly": 10, # 当连接上行线路关闭后的时间限制（秒）
            "statsUserUplink": true, # 是否开启用户上行流量统计
            "statsUserDownlink": true # 是否开启用户下行流量统计
          }
        },
        "system": {
          "statsInboundUplink": true, # 是否开启入站代理的上行流量统计
          "statsInboundDownlink": true, # 是否开启入站代理的下行流量统计
          "statsOutboundUplink": true, # 是否开启出站代理的上行流量统计
          "statsOutboundDownlink": true # 是否开启出站代理的下行流量统计
        }
      },
      "routing": {
        "domainStrategy": "IPIfNonMatch", # 域名解析策略：当匹配域名失败时，尝试解析为 IP 后再匹配
        "rules": [
          {
            "type": "field", # 路由规则类型
            "protocol": ["bittorrent"], # 匹配 BT 协议流量
            "marktag": "ban_bt", # 标记为 ban_bt
            "outboundTag": "block" # 将匹配的流量发送到 block 出站
          },
          {
            "type": "field",
            "ip": [
              "geoip:cn" # 匹配中国大陆 IP
            ],
            "marktag": "ban_geoip_cn", # 标记为 ban_geoip_cn
            "outboundTag": "block" # 将匹配的流量发送到 block 出站
          },
          {
            "type": "field",
            "domain": [
              "domain:openai.com" # 匹配 openai.com 域名
            ],
            "marktag": "fix_openai", # 标记为 fix_openai
            "outboundTag": "direct" # 将匹配的流量发送到 direct 出站
          },
          {
            "type": "field",
            "ip": ["geoip:private"], # 匹配私有 IP 地址
            "outboundTag": "block" # 将匹配的流量发送到 block 出站
          }
        ]
      },
      "inbounds": [
        {
          "port": {{ .Values.v2ray.port }}, # 使用 Helm 变量设置端口
          "listen": "0.0.0.0", # 监听所有网卡
          "protocol": "vmess", # 使用 VMess 协议
          "settings": {
            "clients": [
              {
                "id": "{{ .Values.v2ray.uuid }}", # 使用 Helm 变量设置用户 ID
                "alterId": {{ .Values.v2ray.alterId }} # 使用 Helm 变量设置 alterId
              }
            ]
          },
          "streamSettings": {
            "network": "{{ .Values.v2ray.network }}", # 使用 Helm 变量设置传输协议
            "security": "{{ .Values.v2ray.security }}", # 使用 Helm 变量设置安全类型
            "tcpSettings": {
              "header": {
                "type": "none" # TCP 伪装类型：不伪装
              }
            },
            "sockopt": {
              "mark": 255, # 出站连接的 SO_MARK
              "tcpFastOpen": true, # 启用 TCP Fast Open
              "tproxy": "off" # 不启用透明代理
            }
          },
          "sniffing": {
            "enabled": true, # 启用流量探测
            "destOverride": ["http", "tls"] # 探测 HTTP 和 TLS 流量
          }
        }
      ],
      "outbounds": [
        {
          "tag": "direct", # 直连出站的标签
          "protocol": "freedom", # 直连协议
          "settings": {} # 无特殊设置
        },
        {
          "tag": "block", # 阻断出站的标签
          "protocol": "blackhole", # 黑洞协议，丢弃所有数据
          "settings": {} # 无特殊设置
        }
      ]
    }